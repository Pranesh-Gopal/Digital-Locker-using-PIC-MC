#include <16F877A.h>
#device ADC=16

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O

#use delay(crystal=4MHz)

#define LCD_ENABLE_PIN PIN_D2
#define LCD_RS_PIN PIN_D0
#define LCD_RW_PIN PIN_D1
#define LCD_DATA4 PIN_D4
#define LCD_DATA5 PIN_D5
#define LCD_DATA6 PIN_D6
#define LCD_DATA7 PIN_D7

#include <lcd.c>

void main()
{
    lcd_init(); 

    OUTPUT_B(0xff);  
    port_b_pullups(true);
    
    int ag = 1;                  // Position for LCD cursor
    int i = 0;                   // Index for input sequence
    unsigned char correct_seq[4] = {1, 2, 3, 4}; // Correct sequence
    unsigned char entered_seq[4];                // To store entered sequence
    int x;                        // To store the last pressed value

    while (1)
    { 
        OUTPUT_B(0xef);  // Enable first row of keypad

        // Check each button in the first row
        if (!input(PIN_B0)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('7');  
            entered_seq[i++] = 7;
            ag++;
            while(!input(PIN_B0));
        } 
        else if (!input(PIN_B1)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('4'); 
            entered_seq[i++] = 4;
            ag++;
            while(!input(PIN_B1));
        } 
        else if (!input(PIN_B2)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('1');
            entered_seq[i++] = 1;
            ag++;
            while(!input(PIN_B2));
        }
        else if (!input(PIN_B3)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('!');
            ag++;
            while(!input(PIN_B3));
        }

        OUTPUT_B(0xff);     
        OUTPUT_B(0xdf);  // Enable second row of keypad

        if (!input(PIN_B0)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('8');   
            entered_seq[i++] = 8;
            ag++;
            while(!input(PIN_B0));
        } 
        else if (!input(PIN_B1)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('5');   
            entered_seq[i++] = 5;
            ag++;
            while(!input(PIN_B1));
        } 
        else if (!input(PIN_B2)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('2');   
            entered_seq[i++] = 2;
            ag++;
            while(!input(PIN_B2));
        } 
        else if (!input(PIN_B3)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('0');   
            ag++;
            while(!input(PIN_B3));
        }

        OUTPUT_B(0xff);     
        OUTPUT_B(0xbf);  // Enable third row of keypad

        if (!input(PIN_B0)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('9');   
            entered_seq[i++] = 9;
            ag++;
            while(!input(PIN_B0));
        } 
        else if (!input(PIN_B1)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('6');   
            entered_seq[i++] = 6;
            ag++;
            while(!input(PIN_B1));
        } 
        else if (!input(PIN_B2)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('3');   
            entered_seq[i++] = 3;
            ag++;
            while(!input(PIN_B2));
        }
        else if (!input(PIN_B3)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('=');  
            ag++;
            while(!input(PIN_B3));
        }

        OUTPUT_B(0xff);     
        OUTPUT_B(0x7f);  // Enable fourth row of keypad

        if (!input(PIN_B0)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('*');  
            ag++;
            while(!input(PIN_B0));
        } 
        else if (!input(PIN_B1)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('+');   
            ag++;
            while(!input(PIN_B1));
        } 
        else if (!input(PIN_B2)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('-');   
            ag++;
            while(!input(PIN_B2));
        }
        else if (!input(PIN_B3)) {
            lcd_gotoxy(ag, 1);
            lcd_putc('/');   
            ag++;
            while(!input(PIN_B3));
        }

        OUTPUT_B(0xff);  // Reset keypad rows

        // Check if 4 digits have been entered
        if (i == 4) {
            if (entered_seq[0] == correct_seq[0] &&
                entered_seq[1] == correct_seq[1] &&
                entered_seq[2] == correct_seq[2] &&
                entered_seq[3] == correct_seq[3]) {
                // Correct sequence entered, turn on LED
                OUTPUT_A(0xff);  // Turn on LED connected to PORTA
            } else {
                // Incorrect sequence, turn off LED
                OUTPUT_A(0x00);  // Turn off LED connected to PORTA
            }
            i = 0;   // Reset the input sequence counter
            ag = 1;  // Reset LCD position
            lcd_init(); // Clear the LCD
        }
    }
}

